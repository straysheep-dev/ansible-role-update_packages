---
# update_packages/tasks/apt.yml

# Include this in update_packages/tasks/main.yml with: "- include_task: apt.yml"

# apt: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_module.html
# sudo: https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_privilege_escalation.html
# become: https://docs.ansible.com/ansible/2.10/user_guide/become.html
# add keys: https://stackoverflow.com/questions/64880142/failed-changed-false-msg-apt-cache-update-failed-when-trying-to
# cache_valid_time: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_module.html#parameter-cache_valid_time
# reboot: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/reboot_module.html

# sudo apt full-upgrade -y (same as dist-upgrade -y)
# force-confold keeps any locally modified config files
# https://askubuntu.com/questions/104899/make-apt-get-or-aptitude-run-with-y-but-not-prompt-for-replacement-of-configu
- name: Update all packages to the latest version
  ansible.builtin.apt:
    upgrade: full
    update_cache: true
    dpkg_options: 'force-confold,force-confdef'
  become: true
  become_method: ansible.builtin.sudo

# sudo apt autoremove --purge -y
- name: Remove dependencies that are no longer required and purge their configuration files
  ansible.builtin.apt:
    autoremove: true
    purge: true
  become: true
  become_method: ansible.builtin.sudo

# sudo apt-get clean
- name: Remove useless packages from the cache
  ansible.builtin.apt:
    autoclean: true
  become: true
  become_method: ansible.builtin.sudo

- name: Register if a reboot is required
  ansible.builtin.shell: |
    if [[ -e /run/reboot-required ]]; then echo "true"; fi
  args:
    executable: /bin/bash
  register: reboot_required_exists
  ignore_errors: true

- name: "Set reboot condition"
  ansible.builtin.set_fact:
    reboot_condition: true
  when: reboot_required_exists.stdout == 'true'
